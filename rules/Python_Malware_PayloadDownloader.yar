rule Python_Malware_PayloadDownloader {
    meta:
        author = "RuleLLM"
        description = "Detects Python malware that downloads and executes payloads using XOR decryption"
        confidence = 90
        severity = 85
    strings:
        $setup_import = "from setuptools import setup, find_packages"
        $requests_import = "import requests"
        $subprocess_import = "import subprocess"
        $os_import = "import os"
        $stat_import = "import stat"
        $hashlib_import = "import hashlib"
        $xor_pattern = /for b, k in zip\(.*\):\s*out\.append\(b \^ k\)/
        $binary_write = "with open(binary_path, 'wb') as f:"
        $chmod = "os.chmod(binary_path, stat.S_IREAD | stat.S_IEXEC | stat.S_IRGRP | stat.S_IXGRP)"
        $popen = "subprocess.Popen([binary_path], stdout=subprocess.DEVNULL, stderr=subprocess.STDOUT)"
    condition:
        all of ($setup_import, $requests_import, $subprocess_import, $os_import, $stat_import, $hashlib_import) and
        any of ($xor_pattern, $binary_write, $chmod, $popen)
}